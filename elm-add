#!/bin/bash
## add a elm-component
set -e
set -o pipefail

if [ $# == 1 ]; then
  name="$1";
else
  echo -n "name: "; read name;
fi
mkdir -p src/"$name";
cd src/"$name";

echo "module $name.Types exposing (..)

type alias Model = {}

type alias Msg = {}" >> Types.elm

echo "module $name.State exposing (..)

import $name.Types exposing (Model, Msg)

initialModel : Model
initialModel = {}

init : (Model, Cmd Msg)
init = (initialModel, Cmd.none)

update : Msg -> Model -> ( Model, Cmd Msg )
update msg model =
    model ! []

subscriptions : Model -> Sub Msg
subscriptions model = Sub.none" >> State.elm

echo "module $name.View exposing (..)

import Html exposing (..)
import $name.Types exposing ( Model, Msg )


view : Model -> Html Msg
view model = (node \"$name\") [] [ text \"$name is working.\" ]" >> View.elm

echo "module $name.Rest exposing (..)

import $name.Types exposing (Model, Msg)

getModel : Model
getModel = {}" >> Rest.elm

elm-format --yes *.elm

echo "Added $name. Done."
